!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
FIRST	queue.h	/^} *FIRST, *LAST;$/;"	v	typeref:struct:queue
LAST	queue.h	/^} *FIRST, *LAST;$/;"	v	typeref:struct:queue
NDEBUG	queue.c	3;"	d	file:
brade	Solitar.c	/^int brade[11][11];$/;"	v
dequeue	queue.c	/^struct queue *dequeue()$/;"	f
draggen	Solitar.c	/^void draggen(int lista[32][6], int *n)$/;"	f
enqueue	queue.c	/^void enqueue(struct queue *element)$/;"	f
init	Solitar.c	/^void init(void)$/;"	f
init_queue	queue.c	/^void init_queue(void)$/;"	f
losning	Solitar.c	/^int losning[32][6];$/;"	v
main	Solitar.c	/^int main(void)$/;"	f
main	main.c	/^int main(void){$/;"	f
main	queue.c	/^int main(int argc, char *argv[])$/;"	f
nastadrag	Solitar.c	/^void nastadrag(int nr)$/;"	f
next	queue.h	/^	struct queue *next;$/;"	m	struct:queue	typeref:struct:queue::queue
next	stack.h	/^	struct stack_elem *next;$/;"	m	struct:stack_elem	typeref:struct:stack_elem::stack_elem
prev	queue.h	/^	struct queue *prev;$/;"	m	struct:queue	typeref:struct:queue::queue
print_element	queue.c	/^void print_element(struct queue *element)$/;"	f
print_queue	queue.c	/^void print_queue()$/;"	f
queue	queue.h	/^struct queue {$/;"	s
queue_len	queue.c	/^int queue_len(void)$/;"	f
stack	stack.h	/^struct stack {$/;"	s
stack_depth	stack.c	/^int stack_depth(void)$/;"	f
stack_destroy	stack.c	/^struct stack_elem stack_destroy(void)$/;"	f
stack_elem	stack.h	/^struct stack_elem {$/;"	s
stack_init	stack.c	/^void stack_init(struct stack *ptr)$/;"	f
stack_pop	stack.c	/^struct stack_elem stack_pop(void)$/;"	f
stack_push	stack.c	/^void stack_push(struct stack *top, struct *stack_elem)$/;"	f
top	stack.h	/^	struct stack_elem *top;$/;"	m	struct:stack	typeref:struct:stack::stack_elem
val	queue.h	/^	int val;$/;"	m	struct:queue
x	stack.h	/^	int x;$/;"	m	struct:stack_elem
y	stack.h	/^	int y;$/;"	m	struct:stack_elem
