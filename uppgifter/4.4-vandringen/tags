!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
MAXTREEDEPTH	main.c	8;"	d	file:
MINMOVE	main.c	/^int MINMOVE = INT_MAX;$/;"	v
NDEBUG	main.c	7;"	d	file:
STEP_E	main.c	/^int STEP_E;$/;"	v
STEP_N	main.c	/^int STEP_N;$/;"	v
STEP_S	main.c	/^int STEP_S;$/;"	v
STEP_V	main.c	/^int STEP_V;$/;"	v
TARGET_X	main.c	/^int TARGET_X;$/;"	v
TARGET_Y	main.c	/^int TARGET_Y;$/;"	v
clear_children	tree.c	/^void clear_children(struct tree *node)$/;"	f
create_tree	tree.c	/^void create_tree(struct tree *node, int depth)$/;"	f
dequeue	queue.c	/^struct queue *dequeue(struct queue *first)$/;"	f
encapsulate	queue.c	/^struct queue *encapsulate(struct tree *node)$/;"	f
enqueue	queue.c	/^void enqueue(struct queue *element)$/;"	f
init_queue	queue.c	/^struct queue *init_queue(void)$/;"	f
main	main.c	/^int main(int argc, char *argv[])$/;"	f
print_node	tree.c	/^void print_node(struct tree *node)$/;"	f
queue_len	queue.c	/^int queue_len(void)$/;"	f
spawn_child	tree.c	/^struct tree *spawn_child(struct tree *node, struct tree *leaf)$/;"	f
traverse_inorder	tree.c	/^void traverse_inorder(struct tree *node)$/;"	f
traverse_levelorder	main.c	/^void traverse_levelorder(struct tree *root)$/;"	f
traverse_postorder	tree.c	/^void traverse_postorder(struct tree *node)$/;"	f
traverse_preorder	tree.c	/^void traverse_preorder(struct tree *node)$/;"	f
